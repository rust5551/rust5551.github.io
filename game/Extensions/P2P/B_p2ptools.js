var gdjs;(function(d){let C;(function(x){let D;(function(t){const N=e=>typeof e.eventName=="string"&&typeof e.data=="string";class y{constructor(n,s){this.data="";this.sender="";this.data=n,this.sender=s}}class w{constructor(){this.data=[];this.dataloss=!1}isTriggered(){return this.data.length>0}pushData(n){this.dataloss&&this.data.length>0?this.data[0]=n:this.data.push(n)}popData(){this.data.shift()}getData(){return this.data.length===0?"":this.data[0].data}getSender(){return this.data.length===0?"":this.data[0].sender}}let u=null,i={debug:1},r=null;const o={},a={};let E=!1,f=!1,b="";const c=[],l=[],h=()=>{r===null&&(u!==null?r=new Peer(u,i):r=new Peer(i),r.on("open",()=>{E=!0}),r.on("error",e=>{f=!0,b=e}),r.on("connection",e=>{e.on("open",()=>{S(e),l.push(e.peer)})}),r.on("close",()=>{r=null,h()}),r.on("disconnected",r.reconnect))},S=e=>{o[e.peer]=e,e.on("data",n=>{N(n)&&t.getEvent(n.eventName).pushData(new y(n.data,e.peer))}),e.on("error",()=>{v(e.peer)}),e.on("close",()=>{v(e.peer)}),function n(){e.peerConnection.connectionState==="failed"||e.peerConnection.connectionState==="disconnected"||e.peerConnection.connectionState==="closed"?v(e.peer):setTimeout(n,1e3)}()},v=e=>{!o.hasOwnProperty(e)||(c.push(e),delete o[e])};t.getEvent=e=>(a.hasOwnProperty(e)||(a[e]=new w),a[e]),t.connect=e=>{if(r===null)return;const n=r.connect(e);n.on("open",()=>{S(n)})},t.disconnectFromPeer=e=>{o[e]&&o[e].close()},t.disconnectFromAllPeers=()=>{for(const e of Object.values(o))e.close()},t.disconnectFromAll=()=>{r&&(r.destroy(),r=null)},t.disconnectFromBroker=()=>{r&&(r.disconnect(),r=null)},t.onEvent=(e,n)=>{const s=t.getEvent(e);return s.dataloss=n,s.isTriggered()},t.sendDataTo=(e,n,s)=>{o[e]&&o[e].send({eventName:n,data:s})},t.sendDataToAll=(e,n)=>{for(const s in o)t.sendDataTo(s,e,n)},t.sendVariableTo=(e,n,s)=>{t.sendDataTo(e,n,JSON.stringify(s.toJSObject()))},t.sendVariableToAll=(e,n)=>{t.sendDataToAll(e,JSON.stringify(n.toJSObject()))},t.getEventData=e=>t.getEvent(e).getData(),t.getEventSender=e=>t.getEvent(e).getSender(),t.getEventVariable=(e,n)=>{n.fromJSON(t.getEventData(e))},t.useCustomBrokerServer=(e,n,s,m,V)=>{Object.assign(i,{host:e,port:n,path:s,secure:V,key:m.length===0?"peerjs":m}),h()},t.useDefaultBrokerServer=h,t.useCustomICECandidate=(e,n,s)=>{i.config=i.config||{},i.config.iceServers=i.config.iceServers||[],i.config.iceServers.push({urls:e,username:n,credential:s})},t.overrideId=e=>{u=e},t.getCurrentId=()=>r==null?"":r.id||"",t.isReady=()=>E,t.onError=()=>{const e=f;return f=!1,e},t.getLastError=()=>b,t.onDisconnect=()=>c.length>0,t.getDisconnectedPeer=()=>c[0]||"",t.onConnection=()=>l.length>0,t.getConnectedPeer=()=>l[0]||"",d.callbacksRuntimeScenePostEvents.push(()=>{for(const e in a)!a.hasOwnProperty(e)||a[e].popData();c.length>0&&c.shift(),l.length>0&&l.shift()})})(D=x.p2p||(x.p2p={}))})(C=d.evtTools||(d.evtTools={}))})(gdjs||(gdjs={}));
//# sourceMappingURL=B_p2ptools.js.map
